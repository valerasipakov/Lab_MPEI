// Laba_5_sem2.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
#include <stdio.h> // printf, scanf
#include <conio.h> // getch
#include <math.h> // fabs, pow, ceil\floor, log, log10, exp, sqrt
#include <stdlib.h> // randomize, rand
#include <windows.h> // SetConsoleOutputCP(1251); SetConsoleCP(1251);
//

#include <iostream>
const double xx[7] = { 0.00001, -0.99, -1, -0.1, 0.1, 1, 0.99 };

int main()
{
    int n, i, k, z;
    double e, sl, sum, f, * x; // четыре простого типа и один – дин.массив(указатель)
    SetConsoleOutputCP(1251);
    printf("Введите e=? ");
    scanf("%lf", &e);
    if (e < 1e-13 || e>0.11) {
        printf("Некорректная точность e (0..0.1] \nPress any key");
        getch(); // ожидание нажатия клавиши
        return;
    }

    fflush(stdin); // очищаем буфер (лишние символы после ввода e)
    printf("Введите n=? "); // приглашение
    scanf("%d", &n); // ввод десятичного(%d) n
    if (n < 1 || n>20) {
        printf("Invalid n [1..20]! \nPress any key");
        getch(); // ожидание нажатия клавиши
        return; // выход из функции main
    }
    fflush(stdin);
    x = new double[n]; // выделяем память для n элементов массива
    printf("Введите n=%d значений X из интервала (-1,+1):\n", n); // приглашение
    for (i = 0; i < n; i++) { // ввод x[0]...x[n-1]
        scanf("%lf", &x[i]); // типа long float (%lf)
        if (fabs(x[i]) >= 1) {
            x[i] = xx[rand() % 7]; // одно из семи значений массива xx
            if (fabs(x[i]) == 1) {
                x[i] = x[i] * (rand() % 100) / 100;
                if (x[i] == 0) x[i] = e; // для некоторых вариантов x=/=0
            }
            printf("Некорректное значение заменено на %15.10lf\n", x[i]);
        }
    }




    z = ceil(fabs(log(e) / log(10.0))) + 1;
    printf("e = %*.*lf\n", z + 2, z, e); // вывод e:(z+2):z
    printf("N | X | Sum(X) | K| F(X) | |Sum(X)-F(X)|\n");
    for (i = 1; i < 80; i++) printf("="); printf("\n");
    for (i = 0; i < n; i++) {
        // поиск суммы ряда
        sum = sl = pow(x[i], 2); // sl=pow(x[i],2); sum=sl; // первое слагаемое
        k = 1;
        while ((fabs(sl) >= e) && (k != 500)) {
            sl *= -pow(x[i], 2) / (2 * k + 1) / (2 * k + 1);
            sum += sl;
            k++;
        };
        f = x[i] * sin(x[i]);
        printf("%2d|%17.*lf|%17.*lf|%2d|%17.*lf|%17.*lf\n",
            i + 1, z, x[i], z, sum, k, z, f, z + 2, fabs(sum - f));
    }
    delete[] x; // освобождение памяти для одномерного дин.массива
    printf("Нажмите любую клавишу - Press any key");
    getch();
    return;




}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
